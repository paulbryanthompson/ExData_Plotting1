with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)"))
x <- c(1:5); y <- x # create some data
par(pch=22, col="red") # plotting symbol and color
par(mfrow=c(2,4)) # all plots on one page
opts = c("p","l","o","b","c","s","S","h")
for(i in 1:length(opts)){
heading = paste("type=",opts[i])
plot(x, y, type="n", main=heading)
lines(x, y, type=opts[i])
}
x <- c(1:5); y <- x # create some data
par(pch=22, col="blue") # plotting symbol and color
par(mfrow=c(2,4)) # all plots on one page
opts = c("p","l","o","b","c","s","S","h")
for(i in 1:length(opts){
heading = paste("type=",opts[i])
plot(x, y, main=heading)
lines(x, y, type=opts[i])
}
x <- c(1:5); y <- x # create some data
par(pch=22, col="blue") # plotting symbol and color
par(mfrow=c(2,4)) # all plots on one page
opts = c("p","l","o","b","c","s","S","h")
for(i in 1:length(opts){
heading = paste("type=",opts[i])
plot(x, y, main=heading)
lines(x, y, type=opts[i])
}
x <- c(1:5); y <- x # create some data
par(pch=22, col="blue") # plotting symbol and color
par(mfrow=c(2,4)) # all plots on one page
opts = c("p","l","o","b","c","s","S","h")
for(i in 1:length(opts){
heading = paste("type=",opts[i])
plot(x, y, main=heading)
lines(x, y, type=opts[i])
}
x <- c(1:5); y <- x # create some data
par(pch=22, col="blue") # plotting symbol and color
par(mfrow=c(2,4)) # all plots on one page
opts = c("p","l","o","b","c","s","S","h")
for(i in 1:length(opts)){
heading = paste("type=",opts[i])
plot(x, y, main=heading)
lines(x, y, type=opts[i])
}
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)"))
## R script for plot 1
##fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip?accessType=DOWNLOAD"
##download.file(fileUrl, destfile = "household_power_consumption.zip")
library(dplyr)
library(lubridate)
library(datasets)
dt_hhp <- read.table("household_power_consumption.txt", header = TRUE, sep=";", stringsAsFactors = FALSE
, na.strings = "?")
dt_hhp$Global_active_power <- as.numeric(dt_hhp$Global_active_power)
dt_hhp$Global_reactive_power <- as.numeric(dt_hhp$Global_reactive_power)
dt_hhp$Voltage <- as.numeric(dt_hhp$Voltage)
dt_hhp$Global_intensity <- as.numeric(dt_hhp$Global_intensity)
dt_hhp$Sub_metering_1 <- as.numeric(dt_hhp$Sub_metering_1)
dt_hhp$Sub_metering_2 <- as.numeric(dt_hhp$Sub_metering_2)
dt_hhp$Sub_metering_3 <- as.numeric(dt_hhp$Sub_metering_3)
dt_hhp$Datetime <- paste(dt_hhp$Date, dt_hhp$Time)
dt_hhp$Datetime <- strptime(dt_hhp$Datetime, "%d/%m/%Y %H:%M:%S")
dt_test <- dt_hhp
dt_test$Weekday <- lubridate::wday(dt_test$Datetime, label = TRUE, abbr = TRUE)
dt_subset <- subset(dt_test, Date == "2/2/2007" | Date == "1/2/2007")
# hist(dt_subset$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
# dev.copy(png, file="plot1.png")
# dev.off()
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)"))
axis(1, 1:3, c("Thu", "Fri", "Sat"))
axis(1, [1, 1500, 2800], c("Thu", "Fri", "Sat"))
axis(1, c(1, 1500, 2800), c("Thu", "Fri", "Sat"))
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)")
axis(1, c(1, 1500, 2800), c("Thu", "Fri", "Sat"))
dt_test <- dt_hhp
dt_test$Weekday <- lubridate::wday(dt_test$Datetime, label = TRUE, abbr = TRUE)
dt_subset <- subset(dt_test, Date == "2/2/2007" | Date == "1/2/2007")
# hist(dt_subset$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
# dev.copy(png, file="plot1.png")
# dev.off()
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)")
axis(1, c(1, 1500, 2800), c("Thu", "Fri", "Sat"))
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)"))
axis(1, c(1, 1500, 2800), c("Thu", "Fri", "Sat"))
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)"))
axis(1, c(1, 1500, 2800), c("Thu", "Fri", "Sat"))
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", labels = FALSE))
axis(1, c(1, 1500, 2800), c("Thu", "Fri", "Sat"))
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", labels = FALSE))
axis(1, c(1, 1500, 2800), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
View(dt_subset)
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", labels = FALSE))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", labels = FALSE))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", labels = FALSE, xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
## R script for plot 1
##fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip?accessType=DOWNLOAD"
##download.file(fileUrl, destfile = "household_power_consumption.zip")
library(dplyr)
library(lubridate)
library(datasets)
dt_hhp <- read.table("household_power_consumption.txt", header = TRUE, sep=";", stringsAsFactors = FALSE
, na.strings = "?")
dt_hhp$Global_active_power <- as.numeric(dt_hhp$Global_active_power)
dt_hhp$Global_reactive_power <- as.numeric(dt_hhp$Global_reactive_power)
dt_hhp$Voltage <- as.numeric(dt_hhp$Voltage)
dt_hhp$Global_intensity <- as.numeric(dt_hhp$Global_intensity)
dt_hhp$Sub_metering_1 <- as.numeric(dt_hhp$Sub_metering_1)
dt_hhp$Sub_metering_2 <- as.numeric(dt_hhp$Sub_metering_2)
dt_hhp$Sub_metering_3 <- as.numeric(dt_hhp$Sub_metering_3)
dt_hhp$Datetime <- paste(dt_hhp$Date, dt_hhp$Time)
dt_hhp$Datetime <- strptime(dt_hhp$Datetime, "%d/%m/%Y %H:%M:%S")
dt_test <- dt_hhp
dt_test$Weekday <- lubridate::wday(dt_test$Datetime, label = TRUE, abbr = TRUE)
dt_subset <- subset(dt_test, Date == "2/2/2007" | Date == "1/2/2007")
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", labels = FALSE, xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
dev.copy(png, file="plot2.png")
dev.off()
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xaxt = "n"))
axis(1, labels = FALSE, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
dev.copy(png, file="plot2.png")
dev.off()
with(dt_subset, plot(Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
dev.copy(png, file="plot2.png")
dev.off()
with(dt_subset, plot(Global_active_power, type = "l", xlab = NULL, ylab = "Global Active Power (kilowatts)", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
with(dt_subset, plot(Global_active_power, type = "l", xlab = NULL, ylab = "Global Active Power (kilowatts)", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
with(dt_subset, plot(Global_active_power, type = "l", xlab = "test", ylab = "Global Active Power (kilowatts)", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
with(dt_subset, plot(Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
dev.copy(png, file="plot2.png")
dev.off()
## R script for plot 1
##fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip?accessType=DOWNLOAD"
##download.file(fileUrl, destfile = "household_power_consumption.zip")
library(dplyr)
library(lubridate)
library(datasets)
##read table to data frame.
##used read.table instead of fread since POSIXlt is not compatible with data.tables
##ensure strings are not converted to factors
dt_hhp <- read.table("household_power_consumption.txt", header = TRUE, sep=";", stringsAsFactors = FALSE
, na.strings = "?")
##convert fields to numeric.
dt_hhp$Global_active_power <- as.numeric(dt_hhp$Global_active_power)
dt_hhp$Global_reactive_power <- as.numeric(dt_hhp$Global_reactive_power)
dt_hhp$Voltage <- as.numeric(dt_hhp$Voltage)
dt_hhp$Global_intensity <- as.numeric(dt_hhp$Global_intensity)
dt_hhp$Sub_metering_1 <- as.numeric(dt_hhp$Sub_metering_1)
dt_hhp$Sub_metering_2 <- as.numeric(dt_hhp$Sub_metering_2)
dt_hhp$Sub_metering_3 <- as.numeric(dt_hhp$Sub_metering_3)
##create new field by combining date and time
##convert this to POSIXlt to easily determine day of week
dt_hhp$Datetime <- paste(dt_hhp$Date, dt_hhp$Time)
dt_hhp$Datetime <- strptime(dt_hhp$Datetime, "%d/%m/%Y %H:%M:%S")
dt_hhp$Weekday <- lubridate::wday(dt_hhp$Datetime, label = TRUE, abbr = TRUE)
##subset the data to plot
dt_subset <- subset(dt_hhp, Date == "2/2/2007" | Date == "1/2/2007")
##contruct the line chart
with(dt_subset, plot(Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)", xaxt = "n"))
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
##export to pdf
dev.copy(png, file="plot2.png")
dev.off()
##contruct the line chart
with(dt_subset, plot(Energy_sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
##export to pdf
dev.copy(png, file="plot3.png")
dev.off()
##contruct the line chart
with(dt_subset, plot(Energy_sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
##export to pdf
dev.copy(png, file="plot3.png")
dev.off()
## R script for plot 1
##fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip?accessType=DOWNLOAD"
##download.file(fileUrl, destfile = "household_power_consumption.zip")
library(dplyr)
library(lubridate)
library(datasets)
##read table to data frame.
##used read.table instead of fread since POSIXlt is not compatible with data.tables
##ensure strings are not converted to factors
dt_hhp <- read.table("household_power_consumption.txt", header = TRUE, sep=";", stringsAsFactors = FALSE
, na.strings = "?")
##convert fields to numeric.
dt_hhp$Global_active_power <- as.numeric(dt_hhp$Global_active_power)
dt_hhp$Global_reactive_power <- as.numeric(dt_hhp$Global_reactive_power)
dt_hhp$Voltage <- as.numeric(dt_hhp$Voltage)
dt_hhp$Global_intensity <- as.numeric(dt_hhp$Global_intensity)
dt_hhp$Sub_metering_1 <- as.numeric(dt_hhp$Sub_metering_1)
dt_hhp$Sub_metering_2 <- as.numeric(dt_hhp$Sub_metering_2)
dt_hhp$Sub_metering_3 <- as.numeric(dt_hhp$Sub_metering_3)
##create new field by combining date and time
##convert this to POSIXlt to easily determine day of week
dt_hhp$Datetime <- paste(dt_hhp$Date, dt_hhp$Time)
dt_hhp$Datetime <- strptime(dt_hhp$Datetime, "%d/%m/%Y %H:%M:%S")
dt_hhp$Weekday <- lubridate::wday(dt_hhp$Datetime, label = TRUE, abbr = TRUE)
##subset the data to plot
dt_subset <- subset(dt_hhp, Date == "2/2/2007" | Date == "1/2/2007")
##contruct the line chart
with(dt_subset, plot(Energy_sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
##export to pdf
dev.copy(png, file="plot3.png")
dev.off()
with(dt_subset, plot(Energy_sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
hart
with(dt_subset, plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##axis(2, c(0, 2, 4,
with(dt_subset,
plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n")
plot(Sub_metering_2, type = "l", xlab = "", ylab = "", xaxt = "n")
plot(Sub_metering_3, type = "l", xlab = "", ylab = "", xaxt = "n")
)
with(dt_subset, plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
with(dt_subset, plot(Sub_metering_2, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
with(dt_subset, plot(Sub_metering_3, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
##set axis labels at start of each
with(dt_subset, plot(Sub_metering_2, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
with(dt_subset, plot(Sub_metering_2, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
with(dt_subset, plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
with(dt_subset, plot(Sub_metering_3, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
with(dt_subset, plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", col = 2, xaxt = "n"))
lines(dt_subset$Sub_metering_2, type = "l", col = 3)
lines(dt_subset$Sub_metering_3, type = "l", col = 4)
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
with(dt_subset, plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
lines(dt_subset$Sub_metering_2, type = "l", col = 2)
lines(dt_subset$Sub_metering_3, type = "l", col = 3)
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
##contruct the line chart
with(dt_subset, plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
lines(dt_subset$Sub_metering_2, type = "l", col = 2)
lines(dt_subset$Sub_metering_3, type = "l", col = 3)
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
lines(dt_subset$Sub_metering_3, type = "l", col = 4)
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), text.width = strwidth("Sub_metering_1"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), text.width = strwidth("Sub_metering_1"), lty = 1)
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), text.width = strwidth("Sub_metering_1"), lty = c(1,1,1), col = c(1,2,4))
##export to pdf
dev.copy(png, file="plot3.png")
dev.off()
set graphics device to png
png("plot3.png", width = 480, height = 480)
##contruct the line chart
with(dt_subset, plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
##add multiple series to plot
lines(dt_subset$Sub_metering_2, type = "l", col = 2)
lines(dt_subset$Sub_metering_3, type = "l", col = 4)
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##add legend
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
, lty = c(1,1,1), col = c(1,2,4)
,)
##export to pdf
##dev.copy(png, file="plot3.png")
de
##set graphics device to png
png("plot3.png", width = 480, height = 480)
##contruct the line chart
with(dt_subset, plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
##add multiple series to plot
lines(dt_subset$Sub_metering_2, type = "l", col = 2)
lines(dt_subset$Sub_metering_3, type = "l", col = 4)
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##add legend
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
, lty = c(1,1,1), col = c(1,2,4)
,)
##export to pdf
##dev.copy(png, file="plot3.png")
dev.off()
##set graphics device to png
png("plot4.png", width = 480, height = 480)
par(mfrow = c(2,2), mar = c(2,2,2,1))
##contruct the 1st line chart
with(dt_subset, plot(Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)", xaxt = "n"))
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
##contruct the 2nd line chart
with(dt_subset, plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
##add multiple series to plot
lines(dt_subset$Sub_metering_2, type = "l", col = 2)
lines(dt_subset$Sub_metering_3, type = "l", col = 4)
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##add legend
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
, lty = c(1,1,1), col = c(1,2,4)
,)
##contruct the 3rd line chart
with(dt_subset, plot(Voltage, type = "l", xlab = "datetime", ylab = "Voltage", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##export to pdf
##dev.copy(png, file="plot3.png")
dev.off()
##set graphics device to png
png("plot4.png", width = 480, height = 480)
par(mfcol = c(2,2), mar = c(4,4,2,1))
##contruct the 1st line chart
with(dt_subset, plot(Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)", xaxt = "n"))
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
##contruct the 2nd line chart
with(dt_subset, plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
##add multiple series to plot
lines(dt_subset$Sub_metering_2, type = "l", col = 2)
lines(dt_subset$Sub_metering_3, type = "l", col = 4)
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##add legend
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
, lty = c(1,1,1), col = c(1,2,4)
,)
##contruct the 3rd line chart
with(dt_subset, plot(Voltage, type = "l", xlab = "datetime", ylab = "Voltage", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##export to pdf
##dev.copy(png, file="plot3.png")
dev.off()
##set graphics device to png
png("plot4.png", width = 480, height = 480)
par(mfcol = c(2,2), mar = c(4,4,2,1))
##contruct the 1st line chart
with(dt_subset, plot(Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)", xaxt = "n"))
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
##contruct the 2nd line chart
with(dt_subset, plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
##add multiple series to plot
lines(dt_subset$Sub_metering_2, type = "l", col = 2)
lines(dt_subset$Sub_metering_3, type = "l", col = 4)
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##add legend
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
, lty = c(1,1,1), col = c(1,2,4)
,)
##contruct the 3rd line chart
with(dt_subset, plot(Voltage, type = "l", xlab = "datetime", ylab = "Voltage", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##contruct the 4th line chart
with(dt_subset, plot(Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##close png graphics device
dev.off()
##set graphics device to png
png("plot4.png", width = 480, height = 480)
par(mfcol = c(2,2), mar = c(4,4,2,1))
##contruct the 1st line chart
with(dt_subset, plot(Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)", xaxt = "n"))
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
##contruct the 2nd line chart
with(dt_subset, plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
##add multiple series to plot
lines(dt_subset$Sub_metering_2, type = "l", col = 2)
lines(dt_subset$Sub_metering_3, type = "l", col = 4)
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##add legend
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
, lty = c(1,1,1), col = c(1,2,4)
, border = NULL)
##contruct the 3rd line chart
with(dt_subset, plot(Voltage, type = "l", xlab = "datetime", ylab = "Voltage", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##contruct the 4th line chart
with(dt_subset, plot(Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##close png graphics device
dev.off()
##set graphics device to png
png("plot4.png", width = 480, height = 480)
par(mfcol = c(2,2), mar = c(4,4,2,1))
##contruct the 1st line chart
with(dt_subset, plot(Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)", xaxt = "n"))
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
axis(2, c(0, 2, 4, 6), c("0", "2", "4", "6"))
##contruct the 2nd line chart
with(dt_subset, plot(Sub_metering_1, type = "l", xlab = "", ylab = "Energy Sub Metering", xaxt = "n"))
##add multiple series to plot
lines(dt_subset$Sub_metering_2, type = "l", col = 2)
lines(dt_subset$Sub_metering_3, type = "l", col = 4)
##set axis labels at start of each day using (60*24 = 1440), since measurements are
##taken every minute
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##add legend
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")
, lty = c(1,1,1), col = c(1,2,4)
, bty = "n")
##contruct the 3rd line chart
with(dt_subset, plot(Voltage, type = "l", xlab = "datetime", ylab = "Voltage", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##contruct the 4th line chart
with(dt_subset, plot(Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power", xaxt = "n"))
axis(1, c(1, 1440, 2880), c("Thu", "Fri", "Sat"))
##close png graphics device
dev.off()
## R script for plot 1
##only uncomment the next two lines when downloading the data for the first time!
##fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip?accessType=DOWNLOAD"
##download.file(fileUrl, destfile = "household_power_consumption.zip")
library(dplyr)
library(lubridate)
library(datasets)
##read table to data frame.
##used read.table instead of fread since POSIXlt is not compatible with data.tables
##ensure strings are not converted to factors
dt_hhp <- read.table("household_power_consumption.txt", header = TRUE, sep=";", stringsAsFactors = FALSE
, na.strings = "?")
##convert fields to numeric.
dt_hhp$Global_active_power <- as.numeric(dt_hhp$Global_active_power)
dt_hhp$Global_reactive_power <- as.numeric(dt_hhp$Global_reactive_power)
dt_hhp$Voltage <- as.numeric(dt_hhp$Voltage)
dt_hhp$Global_intensity <- as.numeric(dt_hhp$Global_intensity)
dt_hhp$Sub_metering_1 <- as.numeric(dt_hhp$Sub_metering_1)
dt_hhp$Sub_metering_2 <- as.numeric(dt_hhp$Sub_metering_2)
dt_hhp$Sub_metering_3 <- as.numeric(dt_hhp$Sub_metering_3)
##create new field by combining date and time
##convert this to POSIXlt to easily determine day of week
dt_hhp$Datetime <- paste(dt_hhp$Date, dt_hhp$Time)
dt_hhp$Datetime <- strptime(dt_hhp$Datetime, "%d/%m/%Y %H:%M:%S")
dt_hhp$Weekday <- lubridate::wday(dt_hhp$Datetime, label = TRUE, abbr = TRUE)
##subset the data to plot
dt_subset <- subset(dt_hhp, Date == "2/2/2007" | Date == "1/2/2007")
##contruct the line chart
hist(dt_subset$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
##export to png
dev.copy(png, file="plot1.png")
dev.off()
hist(dt_subset$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
##subset the data to plot
dt_subset <- subset(dt_hhp, Date == "2/2/2007" | Date == "1/2/2007")
##contruct the line chart
hist(dt_subset$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
##export to png
dev.copy(png, file="plot1.png")
View(dt_subset)
tail(dt_subset)
##contruct the line chart
hist(dt_subset$Global_active_power
, main = "Global Active Power"
, xlab = "Global Active Power (kilowatts)"
, col = "red")
